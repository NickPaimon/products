{"version":3,"sources":["components/Header/Header.jsx","api/api.js","components/ProductDetails/ProductEditNew.jsx","components/Products/Products.jsx","components/ProductDetails/ProductEdit.jsx","components/Comments/Comment.jsx","components/ProductDetails/ProductDetails.jsx","App.js","index.js"],"names":["Header","className","AppBar","Toolbar","Typography","variant","mockedAPI","axios","get","headers","then","responce","id","newData","put","response","delete","data","post","ProductEdit","props","changeProduct","key","value","product","state","setState","create","createNewProduct","cancel","name","this","match","params","Input","onChange","e","target","placeholder","type","weight","Button","color","onClick","Component","withRouter","Products","getProductsAPICALL","products","onDeleteProduct","window","confirm","statusText","handleOpen","open","console","log","handleClose","searchForm","event","Modal","onClose","aria-labelledby","aria-describedby","ProductEditNew","filter","item","toLowerCase","includes","count","toString","map","src","imageUrl","alt","shortDescription","to","sendDataToUpperComponent","save","description","Comment","onDeleteClick","date","cutDate","replace","substring","length","comment","ProductDetails","getCommentsFunc","comments","sendNewComment","newCommentText","productID","catch","error","alert","height","width","c","createdAt","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f4858e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    const displayDesktop = () => {\r\n        return <Toolbar>\r\n            <Typography variant=\"h6\"> Hi From Desktop Header</Typography>\r\n            </Toolbar>;\r\n    };\r\n    return (\r\n      <header className=\"headerBar\">\r\n          <AppBar>{displayDesktop()}</AppBar>\r\n      </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nexport const mockedAPI = {\r\n    getProducts(){\r\n        return axios.get(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/product\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin' : '*'\r\n            }\r\n        }).then(responce => responce);\r\n    },\r\n    getProductById(id)  {\r\n        return axios.get(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/product/\"+id , {\r\n            headers: {\r\n                'Access-Control-Allow-Origin' : '*'\r\n            }\r\n        }).then(responce => responce);\r\n    },\r\n    updateProductData(newData, id) {\r\n        return axios.put(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/product/\"+id, newData).then(response => response);\r\n    },\r\n    deleteProduct(id) {\r\n        return axios.delete(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/product/\"+id).then(response => response);\r\n    },\r\n    createNewProduct(data) {\r\n        return axios.post(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/product/\", data).then(response => response);\r\n    },\r\n    deleteComment(id) {\r\n        return axios.delete(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/comments/\"+id).then(response => response);\r\n    },\r\n    getComments() {\r\n        return axios.get(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/comments/\").then(response => response);\r\n    },\r\n    uploadComment(data) {\r\n        return axios.post(\"https://607e20ba02a23c0017e8add9.mockapi.io/api/v1/comments/\", data).then(response => response);\r\n    }\r\n};\r\n\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './ProductDetails.css';\r\n\r\nimport {mockedAPI} from \"../../api/api\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass ProductEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            product:{\r\n                name: \"\"\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        mockedAPI.getProductById(this.props.match.params.id).then((response) => {\r\n            this.setState({product: response.data});\r\n        })\r\n    }\r\n    changeProduct=(key, value)=>{\r\n        let {product}=this.state;\r\n        product[key]=value;\r\n        this.setState({product:product});\r\n    };\r\n    create = () => {\r\n        this.props.createNewProduct(this.state.product);\r\n        this.props.cancel()\r\n    };\r\n\r\n    render(){\r\n        let {product}=this.state;\r\n\r\n        return (\r\n            <div className=\"productBlockEdit newProduct\">\r\n                <div className=\"productDescriptionBlock\">\r\n                    <Typography variant=\"subtitle2\"><label>Назва:</label><br/><Input onChange={(e)=>this.changeProduct('name', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Url адресс:</label><br/><Input placeholder=\"optional\"  onChange={(e)=>this.changeProduct('imageUrl', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Кількість одиниць:</label><br/><Input  onChange={(e)=>this.changeProduct('count', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Короткий oпис:</label><br/><Input  onChange={(e)=>this.changeProduct('shortDescription', e.target.value)}></Input> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Oпис:</label><br/><Input  onChange={(e)=>this.changeProduct('description', e.target.value)}></Input> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Вага:</label><br/> <Input type=\"number\" value={product.weight || ''} onChange={(e)=>this.changeProduct('weight', e.target.value)}/>гр</Typography>\r\n                    <div className=\"buttons\">\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.create}>Create</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.props.cancel()}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductEdit)\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {mockedAPI} from \"../../api/api\";\r\n\r\nimport './Products.css'\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ProductEditNew from \"../ProductDetails/ProductEditNew\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n\r\nclass Products extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            products: [],\r\n            searchForm: '',\r\n            open: false\r\n        }\r\n    }\r\n\r\n    getProductsAPICALL = () => {\r\n        mockedAPI.getProducts().then((response) => {\r\n            this.setState({products: response.data})\r\n        })\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getProductsAPICALL();\r\n    }\r\n\r\n    onDeleteProduct = (id) => {\r\n        if (window.confirm(\"are yo sure?\")) {\r\n            mockedAPI.deleteProduct(id).then((response) => {\r\n                if (response.statusText === \"OK\") {\r\n                    this.getProductsAPICALL();\r\n                }\r\n            })\r\n        }\r\n    };\r\n    handleOpen = () => {\r\n        this.setState({open: true});\r\n        console.log(this.props)\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n\r\n    createNewProduct = (data) => {\r\n        mockedAPI.createNewProduct(data).then((response) => {\r\n            if (response.statusText === \"Created\") {\r\n                this.getProductsAPICALL();\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {products} = this.state;\r\n        let {searchForm} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"searchBlock\">\r\n                    <Input type=\"text\"\r\n                           className=\"searchInput\"\r\n                           placeholder=\"Search by name and count\"\r\n                           onChange={(event) => {\r\n                               this.setState({searchForm: event.target.value});\r\n                           }}/>\r\n                    <Button variant=\"outlined\" color=\"tertiary\" onClick={this.handleOpen}>Add new</Button>\r\n                    <Modal open={this.state.open} onClose={this.handleClose} aria-labelledby=\"simple-modal-title\"\r\n                           aria-describedby=\"simple-modal-description\">\r\n                        <div className=\"modal\">\r\n                            <ProductEditNew createNewProduct={this.createNewProduct} cancel={this.handleClose}/>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n                <div className=\"productsBlock\">\r\n                    {products.filter((item) => {\r\n                        if (searchForm === '') {\r\n                            return item\r\n                        } else if (item.name.toLowerCase().includes(searchForm.toLowerCase())) {\r\n                            return item\r\n                        } else if (item.count.toString().includes(searchForm)) {\r\n                            return item\r\n                        }\r\n                    }).map(item => {\r\n                        return (<div className=\"productBlock\" key={item.id}>\r\n                            <div className=\"productImageBlock\">\r\n                                <img className=\"productImage\"\r\n                                     src={item.imageUrl}\r\n                                     alt=\"product\"/>\r\n                            </div>\r\n                            <div className=\"productDescriptionBlock\">\r\n                                <Typography variant=\"subtitle2\">Назва: {item.name}</Typography>\r\n                                <Typography variant=\"subtitle2\">Короткий опис: {item.shortDescription}</Typography>\r\n                                <Typography variant=\"subtitle2\">Кількість одиниць: {item.count}</Typography>\r\n                                <div className='buttonsBlock'>\r\n                                    <Link to={\"product/\" + item.id}>\r\n                                        <Button variant=\"outlined\" color=\"tertiary\" >Details</Button>\r\n                                    </Link>\r\n                                    <Button variant=\"outlined\" color=\"tertiary\" onClick={() => this.onDeleteProduct(item.id)}>Delete</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './ProductDetails.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {mockedAPI} from \"../../api/api\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nclass ProductEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            product:{\r\n                name: \"\"\r\n            }\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        mockedAPI.getProductById(this.props.match.params.id).then((response) => {\r\n            this.setState({product: response.data});\r\n        })\r\n    }\r\n   changeProduct=(key, value)=>{\r\n        let {product}=this.state;\r\n        product[key]=value;\r\n        this.setState({product:product});\r\n    };\r\n    sendDataToUpperComponent=()=>{\r\n        let newData = this.state.product;\r\n        this.props.save(newData, this.props.match.params.id);\r\n        this.props.cancel();\r\n    };\r\n    render(){\r\n        let {product}=this.state;\r\n\r\n        return (\r\n            <div className=\"productBlockEdit\">\r\n                <div className=\"productImageBlock\">\r\n                    <img className=\"productImage\" src={product.imageUrl} alt={product.name} />\r\n                </div>\r\n                <div className=\"productDescriptionBlock\">\r\n                    <Typography variant=\"subtitle2\"><label>Назва:</label><br/><Input value={product.name || ''} onChange={(e)=>this.changeProduct('name', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Кількість одиниць:</label><br/><Input type=\"number\" value={product.count || ''} onChange={(e)=>this.changeProduct('count', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Oпис:</label><br/><Input value={product.description || ''} onChange={(e)=>this.changeProduct('description', e.target.value)} /> </Typography>\r\n                    <Typography variant=\"subtitle2\"><label>Вага:</label><br/> <Input type=\"number\" value={product.weight || ''} onChange={(e)=>this.changeProduct('weight', e.target.value)}/>гр</Typography>\r\n                    <div className=\"buttons\">\r\n                        <Button variant=\"outlined\"  onClick={this.sendDataToUpperComponent}>Save</Button>\r\n                        <Button variant=\"outlined\"  onClick={()=>this.props.cancel()}>Cancel</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductEdit)\r\n","import React, {Component} from \"react\";\r\nimport './Comment.css';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Comment extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onDeleteClick = (id) => {\r\n        this.props.delete(id);\r\n    };\r\n\r\n    render() {\r\n        let date = this.props.date;\r\n        let cutDate = date.replace('T', \" \").substring(0, date.length - 8);\r\n        return (\r\n            <div>\r\n                <div className=\"comment\">\r\n                    <p>{this.props.comment} <span>{cutDate}</span></p>\r\n                    <Button variant=\"outlined\"  onClick={() => {\r\n                        this.onDeleteClick(this.props.id)\r\n                    }}>Delete\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport {mockedAPI} from \"../../api/api\";\r\n\r\nimport ProductEdit from './ProductEdit';\r\nimport Comment from \"../Comments/Comment\";\r\n\r\nimport './ProductDetails.css'\r\n\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass ProductDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            product: [],\r\n            comments: [],\r\n            open: false,\r\n            newCommentText: '',\r\n        };\r\n    }\r\n\r\n    getCommentsFunc = () => {\r\n        mockedAPI.getComments().then(((response) => {\r\n            this.setState({comments: response.data})\r\n        }))\r\n    };\r\n\r\n    componentDidMount() {\r\n        mockedAPI.getProductById(this.props.match.params.id).then((response) => {\r\n            this.setState({product: response.data});\r\n        });\r\n        this.getCommentsFunc();\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({open: true});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false});\r\n    };\r\n    save = (newData, id) => {\r\n        mockedAPI.updateProductData(newData, id).then((response) => {\r\n            this.setState({product: response.data});\r\n        });\r\n    };\r\n    delete = (id) => {\r\n        mockedAPI.deleteComment(id).then((response) => {\r\n            if (response.statusText === \"OK\") {\r\n                this.getCommentsFunc();\r\n            }\r\n        });\r\n\r\n    };\r\n    sendNewComment = () => {\r\n        let data = {\r\n            description: this.state.newCommentText,\r\n            productID: this.state.product.productID,\r\n        };\r\n        if (data.description === \"\") {\r\n            return ;\r\n        } else {\r\n            mockedAPI.uploadComment(data).then((responce) => {\r\n                if (responce.statusText === \"Created\") {\r\n                    this.setState({newCommentText: ''});\r\n                    this.getCommentsFunc();\r\n                }\r\n            }).catch((error) => {\r\n                alert(\"Max number of elements reached for this resource!\");\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        let {product} = this.state;\r\n        let {comments} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"productBlock productPage\">\r\n                    <div className=\"productImageBlock\">\r\n                        <img className=\"productImage\" src={product.imageUrl} alt={product.name}/>\r\n                    </div>\r\n                    <div className=\"productDescriptionBlock\">\r\n                        <Typography variant=\"subtitle2\">Назва: {product.name}</Typography>\r\n                        <Typography variant=\"subtitle2\">Oпис: {product.description}</Typography>\r\n                        <Typography variant=\"subtitle2\">Кількість одиниць: {product.count}</Typography>\r\n                        <Typography variant=\"subtitle2\">Вага: {product.weight}гр</Typography>\r\n                        <ul>\r\n                            <Typography variant=\"subtitle2\">Розмір: </Typography>\r\n                            <Typography variant=\"subtitle2\"><li>Висота: {product.height}.мм</li></Typography>\r\n                            <Typography variant=\"subtitle2\"><li>Ширина: {product.width}.мм</li></Typography>\r\n                        </ul>\r\n\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/\"><Button variant=\"outlined\" >Back</Button></Link>\r\n                            <Button variant=\"outlined\"  onClick={this.handleOpen}>Edit</Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Modal open={this.state.open} onClose={this.handleClose} aria-labelledby=\"simple-modal-title\"\r\n                           aria-describedby=\"simple-modal-description\">\r\n                        <div className=\"modal\">\r\n                            <ProductEdit save={this.save} cancel={this.handleClose}/>\r\n                        </div>\r\n                    </Modal>\r\n\r\n                </div>\r\n                <div className=\"commentsBlock\">\r\n                    <Typography variant=\"subtitle1\">Comments</Typography>\r\n                    {comments ? comments.filter((item) => {\r\n                        if (item.productID === product.productID) {\r\n                            return item\r\n                        }\r\n                    }).map((c) => {\r\n                        return <Comment delete={this.delete} key={c.id} comment={c.description} date={c.createdAt}\r\n                                        id={c.id}/>\r\n                    }) : null}\r\n                    <div className=\"sendCommentBlock\">\r\n                        <Input type=\"text\" value={this.state.newCommentText}\r\n                               onChange={(e) => this.setState({newCommentText: e.target.value})}/>\r\n                        <Button variant=\"outlined\"  onClick={this.sendNewComment}>Send</Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default withRouter(ProductDetails);\r\n\r\n","import React from 'react';\r\n\r\n\r\nimport {Switch, Route, HashRouter} from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport Header from \"./components/Header/Header\";\r\nimport Products from \"./components/Products/Products\";\r\nimport ProductDetails from \"./components/ProductDetails/ProductDetails\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"wrapper\">\r\n                <Header/>\r\n                <HashRouter basename={\"http://NickPaimon.github.io/productList\"}>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Products} />\r\n                        <Route path=\"/product/:id\" component={ProductDetails} />\r\n                    </Switch>\r\n                </HashRouter>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}